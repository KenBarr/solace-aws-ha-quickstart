language: python
python:
  - "2.7"
git:
  submodules: false

env:
  global:
  - AWS_DEFAULT_REGION=eu-west-2
  - MESSAGEBROKERNODEINSTANCETYPE=t2.small
  
before_install:
  - sudo add-apt-repository ppa:deadsnakes/ppa -y
  - sudo apt-get update
  - sudo apt-get install python2.7
  - echo "Installing AWS CLI"
  - pip install --upgrade awscli
  - echo "Installing test gems"
  - sudo apt-get install build-essential
  - ruby -v
  - gem install yaml-lint
  - echo "Fixing to handle submodules then clone them"
  - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules; cat .gitmodules
  - git submodule sync
  - git submodule init
  - git submodule update
  
install: true

script:
  - 'if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then echo "Cancelling for Pull Requests because secrets are not supported!"; travis_terminate 0; fi'
  - aws cloudformation validate-template --template-body file://templates/solace-master.template
  - aws cloudformation validate-template --template-body file://templates/solace.template
  - aws cloudformation validate-template --template-body file://templates/nodecreate.template
  - yaml-lint -n templates/
  - sed -i "s@SolaceDockerImageParameterValue@${SOLACE_DOCKER_URL_PARAMETER_VALUE}@g" ci/solace-aws-ha-3az-prod-travistest.json
  - sed -i "s@EventBrokerNodeInstanceTypeParameterValue@${MESSAGEBROKERNODEINSTANCETYPE}@g" ci/solace-aws-ha-3az-prod-travistest.json
  - sed -i "s@SolaceStackRegionNAME@${AWS_DEFAULT_REGION}@g" ci/solace-aws-ha-3az-prod-travistest.json
  - aws s3 mb s3://solace-cf-quickstart-travistest || echo "s3 bucket already existed"
  - aws s3 sync . s3://solace-cf-quickstart-travistest/solace/eventbroker/latest --acl public-read
  - export TESTSTACKPREFIX="T$(date +%s)"; export TESTSTACKNAME="$TESTSTACKPREFIX-sol-aws-travistest";
  - aws cloudformation create-stack --stack-name $TESTSTACKNAME --template-body file://templates/solace-master.template --parameters file://ci/solace-aws-ha-3az-prod-travistest.json --on-failure DO_NOTHING --capabilities CAPABILITY_IAM
  - echo "Waiting for stack create complete"
  - "travis_wait 30 sleep 1800 &"
  - until aws cloudformation describe-stacks --stack-name $TESTSTACKNAME | grep -m 1 -E 'CREATE_COMPLETE|DELETE_IN_PROGRESS'; do sleep 10; done
  - aws cloudformation describe-stack-events --stack-name $TESTSTACKNAME
  - aws cloudformation describe-stacks --stack-name $TESTSTACKNAME
  - echo "Pausing to get the ELB ready"; sleep 10
  - url="$(aws elb describe-load-balancers | grep DNSName | grep $TESTSTACKPREFIX | awk -F '"' '{print $4}')"; echo $url
  - curl -O https://sftp.solace.com/download/SDKPERF_C_LINUX64
  - tar -xvf SDKPERF_C_LINUX64
  - pubSubTools/sdkperf_c -cip=$url -mn=100000 -mr=0 -ptl=t1 -stl=t1 | grep "Total Messages"

after_success:
  - echo "Test Success - Branch($TRAVIS_BRANCH) Pull Request($TRAVIS_PULL_REQUEST) Tag($TRAVIS_TAG)"
  - echo "Cloudformation template validated"
  - echo "YAML linted"
  - echo "Cloudformation tested"
  - echo "Messaging tested"
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ] && [ "$TRAVIS_BRANCH" = "master" ]; then aws s3 sync . s3://solace-products/pubsubplus-aws-ha-quickstart/latest --acl public-read; fi

after_script:
  - #aws s3 rb s3://solace-cf-quickstart-travistest --force
  - aws cloudformation delete-stack --stack-name $TESTSTACKNAME
  - echo "Waiting for stack delete complete"
  - stackid="$(aws cloudformation describe-stacks --stack-name $TESTSTACKNAME | grep StackId | awk -F '"' '{print $4}')"
  - if [ -n "$stackid" ]; then until aws cloudformation describe-stacks --stack-name $stackid | grep -m 1 "DELETE_COMPLETE"; do sleep 10; done; fi

